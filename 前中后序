struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

void preorderTraversal(TreeNode* root) {
    if (root == nullptr) return;
    // 处理当前节点
    cout << root->val << " ";
    // 递归处理左子树
    preorderTraversal(root->left);
    // 递归处理右子树
    preorderTraversal(root->right);
}

void inorderTraversal(TreeNode* root) {
    if (root == nullptr) return;
    // 递归处理左子树
    inorderTraversal(root->left);
    // 处理当前节点
    cout << root->val << " ";
    // 递归处理右子树
    inorderTraversal(root->right);
}

void postorderTraversal(TreeNode* root) {
    if (root == nullptr) return;
    // 递归处理左子树
    postorderTraversal(root->left);
    // 递归处理右子树
    postorderTraversal(root->right);
    // 处理当前节点
    cout << root->val << " ";
}
